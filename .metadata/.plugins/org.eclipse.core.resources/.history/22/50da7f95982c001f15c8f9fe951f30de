package com.mysite.sbb.email;

import java.util.Map;
import java.util.concurrent.ThreadLocalRandom;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.mysite.sbb.user.SiteUser;
import com.mysite.sbb.user.UserService;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@RestController
@RequiredArgsConstructor
@Slf4j
public class RedisController {
    private final RedisService redisUserService;
    private final EmailUtil emailUtil;
    /**
     * @info    : Redis에 User 정보를 저장한다.
     * @name    : addUser
     * @version : 1.0.0
     */
    @PostMapping("/redis/v1/post")
    public RedisUser addUser(@RequestBody RedisUser user) {
        log.info("Controller Request: {}", user);

        RedisUser result = redisUserService.addUser(user);
        
        log.info("Controller result: {}", result);

        return result;
    }// save


    /**
     * @info    : Redis에 ID 값으로 유저 정보를 가져온다.
     * @name    : getUser
     * @version : 1.0.0
     * @Description :
     */
    @GetMapping("/redis/v1/getUser")
    public RedisUser getUser(@RequestParam String reqId) {
    	RedisUser userById = redisUserService.getUserById(reqId);
        return userById;
    }
    
	@PostMapping("/email")
	@ResponseBody
	public Map<String, Object> Email(@RequestBody Map<String, Object> params) {
		log.info("email params={}", params);
		// 인증번호 저장
		String serial = Integer.toString(ThreadLocalRandom.current().nextInt(100000, 1000000));
		String body = (String) params.get("body") + serial;
        return emailUtil.sendEmail( (String) params.get("username")
                , (String) params.get("subject")
                , body , serial
        );

	}
	
	@PostMapping("/check")
	@ResponseBody
	public String CheckAuth(@RequestBody String userId) {
		log.info("check userId={}", userId);
		
        return "";
	}
}
